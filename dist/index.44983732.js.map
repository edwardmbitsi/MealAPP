{"mappings":"AAAA,YAAY;AACZ,IAAI,oBAAoB,SAAS,eAAe;AAChD,MAAM,eAAe,SAAS,eAAe;AAC7C,MAAM,6BAA6B,SAAS,eAAe;AAC3D,MAAM,uBAAuB,SAAS,eAAe;AACrD,MAAM,aAAa,SAAS,uBAAuB,cAAc,CAAC,EAAE;AAEpE,kBAAkB;AAClB,aAAa,iBAAiB,SAAS;AACvC,kBAAkB,iBAAiB,SAAS;AAC5C,WAAW,iBAAiB,SAAS;AACrC,2BAA2B,iBAAiB,SAAS;AACrD,2BAA2B,iBAAiB,SAAS;AAErD,mCAAmC;AACnC,iDAAiD;AACjD,mEAAmE;AACnE,IAAI;AAEJ,YAAY;AACZ,SAAS;IACP,IAAI,aAAa,kBAAkB;IACnC,mBAAmB;IACnB,MAAM,CAAC,qDAAqD,EAAE,WAAW,CAAC,CACxE,2BAA2B;KAC1B,KAAK,CAAC,WAAa,SAAS,OAC7B,+BAA+B;KAC9B,KAAK,CAAC;QACL,IAAI,OAAO;QACX,IAAI,KAAK,OACP,8CAA8C;QAC9C,KAAK,MAAM,QAAQ,CAAC;YAClB,QAAQ,CAAC;mFACgE,EAAE,KAAK,OAAO;;kCAE/D,EAAE,KAAK,aAAa;;;0BAG5B,EAAE,KAAK,QAAQ;;;;;UAK/B,CAAC;QACH;QAEF,qCAAqC;QACrC,2BAA2B,YAAY;IACzC;AACJ;AAEA,4BAA4B;AAC5B,SAAS,iBAAiB,KAAK;IAC7B,IAAI,MAAM,OAAO,UAAU,SAAS,kBAAkB;QACpD,IAAI,WAAW,MAAM,OAAO,cAAc;QAC1C,MAAM,SAAS,SAAS;QACxB,MAAM,CAAC,qDAAqD,EAAE,OAAO,CAAC,EACnE,KAAK,CAAC,WAAa,SAAS,QAC5B,KAAK,CAAC,OAAS,gBAAgB,KAAK,KAAK,CAAC,EAAE;IACjD;AACF;AAEA,mCAAmC;AACnC,SAAS,gBAAgB,IAAI;IAC3B,IAAI,UAAU,CAAC;+BACc,EAAE,KAAK,QAAQ;;;WAGnC,EAAE,KAAK,gBAAgB;;;oBAGd,EAAE,KAAK,aAAa;;;mBAGrB,EAAE,KAAK,WAAW;UAC3B,CAAC;IACT,qBAAqB,YAAY;IACjC,qBAAqB,cAAc,UAAU,IAAI;AACnD;AAEA,0BAA0B;AAC1B,SAAS;IACP,qBAAqB,cAAc,UAAU,OAAO;AACtD;AAEA,0BAA0B;AAC1B,SAAS,gBAAgB,KAAK;IAC5B,gDAAgD;IAEhD,0DAA0D;IAC1D,IAAI,CAAC,MAAM,OAAO,UAAU,SAAS,qBACnC;IAGF,IAAI,SAAS,MAAM,OAAO,cAAc;IACxC,IAAI;IAEJ,IAAI,aAAa,QAAQ,kBAAkB,MACzC,iBAAiB,EAAE;SAEnB,iBAAiB,KAAK,MAAM,aAAa,QAAQ;IAEnD,yCAAyC;IACzC,IAAI,eAAe,QAAQ,YAAY,IACrC;IAEF,oDAAoD;IACpD,eAAe,KAAK;IACpB,aAAa,QAAQ,cAAc,KAAK,UAAU;AACpD;AAEA,MAAM,YAAY,SAAS,cAAc;AACzC,MAAM,kBAAkB,SAAS,cAAc;AAE/C,gBAAgB,iBAAiB,SAAS,CAAC;IACzC,MAAM,OAAO,MAAM,OAAO;IAC1B,MAAM,gBAAgB,KAAK,OAAO,KAAK,QAAQ;IAC/C,MAAM,gBAAgB,KAAK,MAAM,KAAK,SAAS;IAE/C,UAAU,MAAM,OAAO,CAAC,EAAE,gBAAgB,GAAG,EAAE,CAAC;IAChD,UAAU,MAAM,MAAM,CAAC,EAAE,gBAAgB,GAAG,EAAE,CAAC;IAC/C,UAAU,MAAM,UAAU;IAC1B,UAAU,MAAM,qBAAqB;AACvC;AAEA,UAAU,iBAAiB,gBAAgB;IACzC,UAAU,MAAM,UAAU;IAC1B,UAAU,MAAM,qBAAqB;AACvC","sources":["src/script.js"],"sourcesContent":["// Selectors\nlet searchTextElement = document.getElementById(\"search-meal-input\");\nconst searchButton = document.getElementById(\"search-button\");\nconst mealSearchResultsContainer = document.getElementById(\"meal\");\nconst mealDetailsContainer = document.getElementById(\"meal-details-container\");\nconst backButton = document.getElementsByClassName(\"back-button\")[0];\n\n// Event Listeners\nsearchButton.addEventListener(\"click\", searchForMeal);\nsearchTextElement.addEventListener(\"input\", searchForMeal);\nbackButton.addEventListener(\"click\", closeRecipeDetails);\nmealSearchResultsContainer.addEventListener(\"click\", getRecipeDetails);\nmealSearchResultsContainer.addEventListener(\"click\", addToFavourites);\n\n// This didnot work for some reason\n// for (i = 0; i < favouriteButton.length; i++) {\n//   favouriteButton[i].addEventListener(\"click\", addToFavourites);\n// }\n\n// Functions\nfunction searchForMeal() {\n  let searchText = searchTextElement.value;\n  // Promise chaining\n  fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${searchText}`)\n    // convert response to json\n    .then((response) => response.json())\n    // json structure -> {meals:[]}\n    .then((data) => {\n      let list = \"\";\n      if (data.meals) {\n        // loop over every meal and add it to the list\n        data.meals.forEach((meal) => {\n          list += `\n              <div class = \"meal-item d-flex flex-column align-items-center\" id = \"${meal.idMeal}\" >\n                  <div class = \"meal-img\">\n                      <img src = \"${meal.strMealThumb}\" alt = \"food\">\n                  </div>\n                  <div class = \"meal-name\">\n                      <h3>${meal.strMeal}</h3>\n                      <a href = \"#\" class = \"recipe-button\">Get the Recipe</a>\n                  </div>\n                  <button type=\"submit\" class=\"btn btn-sm btn-outline favourite-button\"> Add To Favourites </button>\n              </div>\n          `;\n        });\n      }\n      // append all meals found to meal div\n      mealSearchResultsContainer.innerHTML = list;\n    });\n}\n\n// To display recipe details\nfunction getRecipeDetails(event) {\n  if (event.target.classList.contains(\"recipe-button\")) {\n    let mealItem = event.target.parentElement.parentElement;\n    const mealId = mealItem.id;\n    fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${mealId}`)\n      .then((response) => response.json())\n      .then((data) => addRecipeDetail(data.meals[0]));\n  }\n}\n\n// function  to show recipe details\nfunction addRecipeDetail(meal) {\n  let content = `\n    <h2 class = \"recipe-title\">${meal.strMeal}</h2>\n    <div class = \"recipe-instructions\">\n        \n        <p>${meal.strInstructions}</p>\n    </div>\n    <div class = \"recipe-meal-img\">\n        <img src = \"${meal.strMealThumb}\" alt = \"\">\n    </div>\n    <div class = \"recipe-link\">\n        <a href = \"${meal.strYoutube}\" target = \"_blank\">Watch Video</a>\n    </div>`;\n  mealDetailsContainer.innerHTML = content;\n  mealDetailsContainer.parentElement.classList.add(\"show-recipe\");\n}\n\n// To close recipe details\nfunction closeRecipeDetails() {\n  mealDetailsContainer.parentElement.classList.remove(\"show-recipe\");\n}\n\n// add meals to favourites\nfunction addToFavourites(event) {\n  // check if user has clicked on favourite button\n\n  // if user has not clicked on favourite button just return\n  if (!event.target.classList.contains(\"favourite-button\")) {\n    return;\n  }\n\n  let mealId = event.target.parentElement.id;\n  let favouriteMeals;\n\n  if (localStorage.getItem(\"favourites\") === null) {\n    favouriteMeals = [];\n  } else {\n    favouriteMeals = JSON.parse(localStorage.getItem(\"favourites\"));\n  }\n  // check if the mealId is already present\n  if (favouriteMeals.indexOf(mealId) !== -1) {\n    return;\n  }\n  // add id to array and save it back to local storage\n  favouriteMeals.push(mealId);\n  localStorage.setItem(\"favourites\", JSON.stringify(favouriteMeals));\n}\n\nconst explosion = document.querySelector('.explosion');\nconst favouriteButton = document.querySelector('.favourite-button');\n\nfavouriteButton.addEventListener('click', (event) => {\n  const rect = event.target.getBoundingClientRect();\n  const buttonCenterX = rect.left + rect.width / 2;\n  const buttonCenterY = rect.top + rect.height / 2;\n\n  explosion.style.left = `${buttonCenterX - 15}px`;\n  explosion.style.top = `${buttonCenterY - 15}px`;\n  explosion.style.opacity = '1';\n  explosion.style.animationPlayState = 'running';\n});\n\nexplosion.addEventListener('animationend', () => {\n  explosion.style.opacity = '0';\n  explosion.style.animationPlayState = 'paused';\n});\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}